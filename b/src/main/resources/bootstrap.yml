#
# 服务器配置
server:
  # 端口
  port: 802
#
# Spring Boot 配置
#
spring:
  #
  application:
    # 注册的服务名
    name: b
  #
  # Cloud 配置
  cloud:
    inetutils:
      # 将被忽略的网络接口的 Java 正则表达式列表。
      ignored-interfaces:
        # 正则表达式，忽略 VMware 虚拟机网卡
        - VMware.*
        - VirtualBox.*
    nacos:
      # 服务注册
      discovery:
        # 服务注册地址
        server-addr: 192.168.5.3:8848
        # 命名空间
        namespace: public
      # 服务配置
      config:
        # 命名空间
        namespace: public
        file-extension: yml
        server-addr: 192.168.5.3:8848


---
# 以下配置可放入 nacos 中
#
# Spring Boot 配置
#
spring:
  #
  # 数据库 配置
  datasource:
    #
    # 多数据源
    #
    # 没有@DS	      默认数据源
    # @DS("dsName")	  dsName可以为组名也可以为具体某个库的名称
    # 可以注解在方法上,可以注解在service实现或mapper接口方法上。
    dynamic:
      # 性能分析
      p6spy: true
      # 是否启用严格模式,默认不启动. 严格模式下未匹配到数据源直接报错, 非严格模式下则使用默认数据源primary所设置的数据源
      strict: true
      # 设置默认的数据源或者数据源组,默认值即为master,如果你主从默认下主库的名称就是master可不定义此项。
      primary: master
      # 开启 seata 代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭
      seata: true
      # 支持XA及AT模式,默认AT
      seata-mode: AT
      # 数据源
      datasource:
        # HIS 主数据源（主数据源）
        master:
          # 驱动
          driver-class-name: com.p6spy.engine.spy.P6SpyDriver
          # URL
          url: jdbc:p6spy:mysql://127.0.0.1:3306/seata-demo-b?useSSL=false&serverTimezone=GMT%2B8&characterEncoding=UTF-8
          # 用户名
          username: root
          # 密码
          password: root
          # Hikari 连接池
          hikari:
            # 最小空闲连接数量
            minimum-idle: 3
            # 连接池最大连接数
            maximum-pool-size: 10
            connection-test-query: select 1 * 1
  # 微服务
  cloud:
    loadbalancer:
      ribbon:
        # 禁用 ribbon
        enabled: false
    nacos:
      discovery:
        metadata:
          # 快速上线
          preserved.heart.beat.interval: 1000
          preserved.heart.beat.timeout: 3000
          preserved.ip.delete.timeout: 3000
#
# MyBatis Plus 配置
mybatis-plus:
  # MyBatis Mapper 所对应的 XML 文件位置，如果您在 Mapper 中有自定义方法（XML 中有自定义实现），需要进行该配置，告诉 Mapper 所对应的 XML 文件位置。
  # 必须配置（否则出现：org.apache.ibatis.binding.BindingException: Invalid bound statement (not found)）
  # 父子项目中都有 xml 文件时，文件夹不能使用 *，xml文件名可使用 *
  mapper-locations:
    - classpath:mapper/*.xml
  # MyBaits 别名包扫描路径，通过该属性可以给包中的类注册别名，注册后在 Mapper 对应的 XML 文件中可以直接使用类名，
  # 而不用使用全限定的类名（即 XML 中调用的时候不用包含包名）。
  type-aliases-package: cn.com.xuxiaowei.*.entity
  # 枚举类 扫描路径，如果配置了该属性，会将路径下的枚举类进行注入，让实体类字段能够简单快捷的使用枚举属性，
  # 具体使用请结合 枚举注入（https://mp.baomidou.com/guide/enum.html） 查看。
  type-enums-package: cn.com.xuxiaowei.*.enums
  global-config:
    db-config:
      # 逻辑已删除值,(逻辑删除下有效，默认值：1)
      logic-delete-value: 1
      # 逻辑未删除值,(逻辑删除下有效，默认值：0)
      logic-not-delete-value: 0
    # MyBatis 配置
  configuration:
    # 缓存
    cache-enabled: true
#
# seata-配置
seata:
  # 关闭自动代理
  # https://dynamic-datasource.com/guide/tx/Seata.html#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9
  enable-auto-data-source-proxy: false
  enabled: true
  application-id: ${spring.application.name}
  tx-service-group: seata_demo_group
  service:
    vgroup-mapping:
      seata_demo_group: default #key与上面的tx-service-group的值对应
    grouplist:
      seata: seata-server # 服务名
  config:
    type: file
  registry:
    type: Nacos
#
# Hystrix-配置
hystrix:
  command:
    default:
      execution:
        isolation:
          # RequestContextHolder.getRequestAttributes() 不为空
          # RootContext.getXID() 不为空
          strategy: SEMAPHORE
#
# 日志配置
logging:
  level:
    web: debug
    cn.com.xuxiaowei: debug
  file:
    # 文件名及路径
    name: /logs/${spring.application.name}/${spring.application.name}.log
    # 文件最大大小,单位: org.springframework.util.unit.DataSize
    max-size: 20MB
    #日志保存天数
    max-history: 365
  # 格式
  pattern:
    # 压缩文件命名
    rolling-file-name: "${LOG_FILE}.%d{yyyy-MM-dd}.%i.log.gz"

---

# spring配置
spring:
  # 日志治理
  zipkin:
    base-url: http://127.0.0.1:9411/
  sleuth:
    # 与采样相关的属性。
    sampler:
      # 应该采样的请求的概率。 例如，应该对 1.0 - 100% 的请求进行抽样。 精度仅为整数（即不支持 0.1% 的迹线）
      probability: 1.0
